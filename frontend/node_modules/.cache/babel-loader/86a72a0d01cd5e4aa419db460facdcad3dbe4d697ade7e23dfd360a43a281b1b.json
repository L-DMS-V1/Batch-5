{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theek\\\\Batch-5\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  roleRequired\n}) => {\n  const token = localStorage.getItem('token');\n\n  // For demonstration purposes, allow access if there's no token\n  if (!token) {\n    console.warn('No token found. Allowing access for demonstration.');\n    return element;\n  }\n  try {\n    const decodedToken = jwtDecode(token);\n    const userRole = decodedToken.role;\n    if (userRole !== roleRequired) {\n      console.warn('Role mismatch. Allowing access for demonstration.');\n      return element;\n    }\n    return element;\n  } catch (error) {\n    console.error('Invalid token', error);\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","element","roleRequired","token","localStorage","getItem","console","warn","decodedToken","userRole","role","error","removeItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/theek/Batch-5/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ element, roleRequired }) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  // For demonstration purposes, allow access if there's no token\r\n  if (!token) {\r\n    console.warn('No token found. Allowing access for demonstration.');\r\n    return element;\r\n  }\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const userRole = decodedToken.role;\r\n\r\n    if (userRole !== roleRequired) {\r\n      console.warn('Role mismatch. Allowing access for demonstration.');\r\n      return element;\r\n    }\r\n\r\n    return element;\r\n  } catch (error) {\r\n    console.error('Invalid token', error);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACpD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAI,CAACF,KAAK,EAAE;IACVG,OAAO,CAACC,IAAI,CAAC,oDAAoD,CAAC;IAClE,OAAON,OAAO;EAChB;EAEA,IAAI;IACF,MAAMO,YAAY,GAAGX,SAAS,CAACM,KAAK,CAAC;IACrC,MAAMM,QAAQ,GAAGD,YAAY,CAACE,IAAI;IAElC,IAAID,QAAQ,KAAKP,YAAY,EAAE;MAC7BI,OAAO,CAACC,IAAI,CAAC,mDAAmD,CAAC;MACjE,OAAON,OAAO;IAChB;IAEA,OAAOA,OAAO;EAChB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/B,oBAAOb,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;AACF,CAAC;AAACC,EAAA,GAzBIlB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}