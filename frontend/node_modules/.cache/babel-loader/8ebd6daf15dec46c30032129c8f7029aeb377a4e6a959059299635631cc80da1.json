{"ast":null,"code":"// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode'; // Comment out this line for now\n\nconst ProtectedRoute = ({\n  element,\n  roleRequired\n}) => {\n  // Temporarily bypass authentication for demonstration purposes\n  return element;\n\n  // Comment out the original authentication logic\n  /*\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (!token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n    try {\r\n    const decodedToken = jwtDecode(token);\r\n    const userRole = decodedToken.role;\r\n      if (userRole !== roleRequired) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n      return element;\r\n  } catch (error) {\r\n    console.error('Invalid token', error);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  */\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","ProtectedRoute","element","roleRequired","_c","$RefreshReg$"],"sources":["C:/Users/theek/Batch-5/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode'; // Comment out this line for now\r\n\r\nconst ProtectedRoute = ({ element, roleRequired }) => {\r\n  // Temporarily bypass authentication for demonstration purposes\r\n  return element;\r\n\r\n  // Comment out the original authentication logic\r\n  /*\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (!token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const userRole = decodedToken.role;\r\n\r\n    if (userRole !== roleRequired) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return element;\r\n  } catch (error) {\r\n    console.error('Invalid token', error);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  */\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;;AAEA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EACpD;EACA,OAAOD,OAAO;;EAEd;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAC;AAACE,EAAA,GA5BIH,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}